/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/notations/tango/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/notations/tango/index.js":
/*!*************************************!*\
  !*** ./js/notations/tango/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _Notations = __webpack_require__(/*! ../../utils/Notations */ \"./js/utils/Notations.js\");\n\n/*----------  Elements  ----------*/\nvar bottom = document.getElementById('bottom');\nvar left = document.getElementById('left');\nvar labelBox = document.getElementById('label-box');\nvar polish = document.getElementById('pol');\nvar eng = document.getElementById('eng');\n\nvar video = (0, _Notations.notationsVideo)(document.getElementById('video'), videoReady);\n\nvar loadingMsg = 'Please be patient, loading large images';\nvar msg = document.createElement('p');\nmsg.className = 'loading-msg';\nmsg.innerText = loadingMsg;\n\nvar loading = document.createElement('div');\nloading.className = 'loading';\nloading.style.opacity = 0;\n\nvar progress = document.createElement('progress');\nprogress.className = 'progress';\nprogress.style.zIndex = 0;\nprogress.max = 100;\nprogress.value = 0;\n\nloading.appendChild(progress);\nloading.appendChild(msg);\nleft.appendChild(loading);\n\nvar animReq;\nvar timeline;\nvar timelineBg;\nvar notations;\nvar data = {};\nvar loaded = false;\n\nvar assets = {\n  small: '/img/assets/notations/tango-small.jpg',\n  large: '/img/assets/notations/tango.jpg'\n};\nvar assetsLoaded = 0;\n\nvar sectionsLen = 0;\nvar bleedBottom = 30;\nvar dragging = false;\nvar prevX = 0;\nvar tX = 0;\nvar nX = 0;\n\nvar images = {\n  total: 16,\n  loaded: 0,\n  totalW: 15458,\n  width: 1000,\n  height: 785,\n  frames: {}\n};\n\nvar resize = {\n  reset: function reset() {\n    this.bottomW = window.innerWidth;\n    this.topH = document.getElementById('header').offsetHeight;\n    this.timelinePercent = DDD.getPercent(this.bottomW, images.totalW);\n    this.bottomH = DDD.sizeFromPercentage(this.timelinePercent, images.height) + bleedBottom | 0;\n    this.leftH = window.innerHeight - this.topH - this.bottomH;\n    this.notationsPercent = DDD.getPercent(this.leftH, images.height);\n  },\n\n  resizeTimeline: function resizeTimeline(noReset) {\n    if (!noReset) {\n      this.reset();\n    }\n    this.timelineH = DDD.sizeFromPercentage(this.timelinePercent, images.height) | 0;\n    timeline.canvas.width = timelineBg.canvas.width = this.bottomW;\n    timeline.canvas.height = timelineBg.canvas.height = this.bottomH;\n    bottom.style.height = this.bottomH + 'px';\n\n    if (this.bottomH > this.timelineH) {\n      timeline.offY = this.bottomH / 2 - this.timelineH / 2;\n    } else {\n      timeline.offY = 0;\n    }\n\n    timeline.offX = DDD.sizeFromPercentage(this.timelinePercent, data.initX) | 0;\n    timeline.ctx.strokeStyle = 'red';\n\n    images.timelineW = DDD.sizeFromPercentage(this.timelinePercent, 1000);\n  },\n\n  resizeNotations: function resizeNotations(noReset) {\n    if (!noReset) {\n      this.reset();\n    }\n    this.leftW = left.offsetWidth;\n    left.style.top = this.topH + 'px';\n    left.style.height = this.leftH + 'px';\n\n    notations.resizeW = DDD.sizeFromPercentage(this.notationsPercent, images.totalW);\n    notations.canvas.height = this.leftH;\n    notations.canvas.width = this.leftW;\n\n    notations.offX = DDD.sizeFromPercentage(this.notationsPercent, data.initX) | 0;\n    notations.ctx.strokeStyle = 'red';\n\n    labelBox.style.left = notations.offX + 'px';\n\n    images.notationsW = DDD.sizeFromPercentage(this.notationsPercent, 1000);\n  },\n\n  videoData: function videoData(noReset) {\n    if (!noReset) {\n      this.reset();\n    }\n    var videoH = window.innerHeight - this.bottomH;\n    var x = data.endX - data.initX;\n    video.style.maxHeight = videoH + 'px';\n    video.style.marginTop = videoH / 2 - video.offsetHeight / 2 + 'px';\n\n    this.videoTimelineW = video.duration / DDD.sizeFromPercentage(this.timelinePercent, x);\n    this.videoNotationsW = video.duration / DDD.sizeFromPercentage(this.notationsPercent, x);\n  },\n\n  resizeData: function resizeData() {\n    var sectionsLength = data.sections.length;\n    var labelsLength = data.labels.length;\n    var bg = 'e03f40';\n\n    for (var i = 0; i < sectionsLength; i++) {\n      var x = data.sections[i].x;\n      var w = i === data.sections.length - 1 ? data.endX - x : data.sections[i + 1].x - x;\n\n      data.sections[i].nX = DDD.sizeFromPercentage(this.notationsPercent, x) | 0;\n      data.sections[i].nW = DDD.sizeFromPercentage(this.notationsPercent, w) | 0;\n\n      data.sections[i].tX = DDD.sizeFromPercentage(this.timelinePercent, x) | 0;\n      data.sections[i].tW = DDD.sizeFromPercentage(this.timelinePercent, w) | 0;\n    }\n\n    for (var j = 0; j < labelsLength; j++) {\n      var x = data.labels[j].x;\n      var y = data.labels[j].y;\n      var w = data.labels[j].w;\n      var h = data.labels[j].h;\n\n      data.labels[j].nX = DDD.sizeFromPercentage(this.notationsPercent, x) | 0;\n      data.labels[j].nY = this.topH + DDD.sizeFromPercentage(this.notationsPercent, y) | 0;\n      data.labels[j].nW = DDD.sizeFromPercentage(this.notationsPercent, w) | 0;\n      data.labels[j].nH = DDD.sizeFromPercentage(this.notationsPercent, h) | 0;\n    }\n  },\n\n  updateRepaint: function updateRepaint() {\n    this.reset();\n    this.resizeTimeline(true);\n    this.resizeNotations(true);\n    this.videoData(true);\n    this.resizeData();\n    repaintTimeline();\n    updateNotations();\n  },\n\n  all: function all() {\n    this.reset();\n    this.resizeTimeline(true);\n    this.resizeNotations(true);\n    this.videoData(true);\n    this.resizeData();\n  }\n};\n\nfunction init() {\n  var videoC = document.getElementById('video-container');\n  var loading2 = document.createElement('div');\n\n  loading2.className = 'loading';\n  videoC.appendChild(loading2);\n\n  DDD.json({\n    url: '/data/notations/tango.json',\n    container: document.getElementById('ddd-container'),\n    loadingEle: loading2,\n    loadingMsg: 'Loading metadata'\n  }).then(function (d) {\n    videoC.removeChild(loading2);\n    data = d;\n    sectionsLen = d.sections.length;\n    assetsLoaded++;\n\n    timeline = new _Notations.Notations({ container: bottom });\n    notations = new _Notations.Notations({ container: left });\n    timelineBg = DDD.canvas(bottom, { h: timeline.canvas.height, zi: 1 });\n    resize.all();\n\n    timelineBg.ctx.fillRect(0, 0, resize.bottomW, resize.bottomH);\n    loading.style.opacity = 1;\n    loadImages();\n  }).catch(function (err) {\n    console.error(err);\n  });\n}\n\nfunction loadImages() {\n  var i = 0;\n\n  while (i < images.total) {\n    var img = new Image();\n    img.dataset.key = i;\n    img.onload = function () {\n      var key = this.dataset.key;\n      var w = images.timelineW;\n      images.loaded++;\n\n      var value = images.loaded / images.total * 100;\n      progress.value = value;\n      msg.innerText = Math.floor(value) + '%' + '\\n' + loadingMsg;\n\n      paintTimelineFrame(images.frames[key], key * w, timeline.offY, w);\n\n      checkAssetsLoaded();\n    };\n    img.src = '/img/assets/notations/tango/tango' + i + '.jpg';\n    images.frames[i] = img;\n    i++;\n  }\n}\n\nfunction checkAssetsLoaded() {\n  assetsLoaded++;\n\n  if (assetsLoaded === 18) {\n    loaded = true;\n    left.removeChild(loading);\n    updateNotations();\n    video.controls = true;\n    start();\n  }\n}\n\nfunction start() {\n  function stopDrag() {\n    dragging = false;\n    return false;\n  }\n\n  // videoControl();\n  left.onmousedown = function (event) {\n    if (loaded) {\n      prevX = event.clientX;\n      dragging = true;\n    }\n\n    return false;\n  };\n\n  left.onmouseup = stopDrag;\n  bottom.onmouseup = stopDrag;\n\n  left.onmousemove = function (event) {\n    if (dragging) {\n      var distance = prevX - event.clientX;\n      video.currentTime += resize.videoNotationsW * distance;\n      prevX = event.clientX;\n    } else {\n      var x = event.clientX;\n      var y = event.clientY;\n      var labelsLength = data.labels.length;\n      var onLabel = false;\n\n      for (var i = 0; i < labelsLength; i++) {\n        var x1 = data.labels[i].nX - nX;\n        var x2 = x1 + data.labels[i].nW;\n        var y1 = data.labels[i].nY;\n        var y2 = y1 + data.labels[i].nH;\n\n        if (x >= x1 && x < x2 && y >= y1 && y < y2) {\n          labelBox.className = data.labels[i].class;\n          labelBox.style.top = y1 - resize.topH - 16 + 'px';\n          polish.innerText = data.labels[i].label;\n          eng.innerText = data.labels[i].eng;\n          onLabel = true;\n          labelBox.style.opacity = 1;\n          break;\n        }\n      }\n\n      if (!onLabel) {\n        labelBox.style.opacity = 0;\n      }\n    }\n\n    return false;\n  };\n\n  left.onmouseleave = function () {\n    dragging = false;\n  };\n\n  bottom.onmousedown = function (event) {\n    if (loaded) {\n      var distance = event.clientX - tX;\n      video.currentTime += resize.videoTimelineW * distance;\n      dragging = true;\n    }\n\n    return false;\n  };\n\n  bottom.onmousemove = function (event) {\n    if (dragging) {\n      var distance = event.clientX - tX;\n      video.currentTime += resize.videoTimelineW * distance;\n    }\n    return false;\n  };\n}\n\nfunction videoReady() {\n  checkAssetsLoaded();\n  init();\n\n  video.onplay = function () {\n    animReq = requestAnimationFrame(playerLoop);\n    return false;\n  };\n\n  video.onpause = function () {\n    window.cancelAnimationFrame(animReq);\n    return false;\n  };\n\n  video.onseeking = function () {\n    updateNotations();\n    return false;\n  };\n}\n\nfunction playerLoop() {\n  updateNotations();\n  animReq = requestAnimationFrame(playerLoop);\n}\n\nfunction assetReady() {\n  assetsLoaded++;\n}\n\nfunction updateNotations() {\n  var currentTime = video.currentTime;\n  var current;\n  var next;\n\n  for (var i = 0; i < sectionsLen; i++) {\n    if (i < sectionsLen - 1) {\n      if (currentTime >= data.sections[i].start && currentTime < data.sections[i + 1].start) {\n        current = data.sections[i];\n        next = data.sections[i + 1];\n        break;\n      } else {\n        continue;\n      }\n    } else {\n      current = data.sections[i];\n      next = {\n        start: video.duration,\n        x: data.endX\n      };\n    }\n  }\n\n  var sectionLength = next.start - current.start;\n  var timeOffset = currentTime - current.start;\n  var stepN = timeOffset * (current.nW / sectionLength);\n  var stepT = timeOffset * (current.tW / sectionLength);\n  tX = stepT + current.tX;\n  nX = stepN + (current.nX - notations.offX);\n\n  timeline.ctx.clearRect(0, 0, resize.bottomW, resize.bottomH);\n  timeline.ctx.beginPath();\n  timeline.ctx.moveTo(tX, 0);\n  timeline.ctx.lineTo(tX, resize.bottomH);\n  timeline.ctx.stroke();\n\n  repaintNotations(nX);\n\n  notations.ctx.beginPath();\n  notations.ctx.moveTo(notations.offX, 0);\n  notations.ctx.lineTo(notations.offX, resize.leftH);\n  notations.ctx.stroke();\n}\n\nfunction repaintNotations(x) {\n  notations.ctx.clearRect(0, 0, resize.leftW, resize.leftH);\n  var w = images.notationsW;\n  var len = images.total;\n  var i;\n\n  for (i = 0; i < len; i++) {\n    var fx = i * w;\n    var x1 = fx - x;\n    var x2 = x1 + w;\n\n    if (x2 <= 0) {\n      continue;\n    } else if (x1 > resize.leftW) {\n      break;\n    }\n\n    paintNotationsFrame(images.frames[i], x1, w);\n  }\n}\n\nfunction paintNotationsFrame(img, x, w) {\n  notations.ctx.drawImage(img, 0, 0, images.width, images.height, x, 0, w, resize.leftH);\n}\n\nfunction repaintTimeline() {\n  timelineBg.ctx.fillRect(0, 0, resize.bottomW, resize.bottomH);\n  var i = 0;\n  var w = images.timelineW;\n\n  while (i < images.total) {\n    paintTimelineFrame(images.frames[i], i * w, timeline.offY, w);\n    i++;\n  }\n}\n\nfunction paintTimelineFrame(img, x, y, w) {\n  timelineBg.ctx.drawImage(img, 0, 0, images.width, images.height, x | 0, y | 0, w, resize.timelineH);\n}\n\nwindow.onresize = resize.updateRepaint.bind(resize);\n\n// function videoControl() {\n//   var container = document.getElementById('video-container');\n//   var back = document.createElement('button');\n//   var forward = document.createElement('button');\n\n//   var back2 = document.createElement('button');\n//   var forward2 = document.createElement('button');\n\n//   var back3 = document.createElement('button');\n//   var forward3 = document.createElement('button');\n\n//   var back4 = document.createElement('button');\n//   var forward4 = document.createElement('button');\n\n//   back.innerHTML = '&larr;';\n//   forward.innerHTML = '&rarr;';\n\n//   back2.innerHTML = '&larr;';\n//   forward2.innerHTML = '&rarr;';\n\n//   back3.innerHTML = '&larr;';\n//   forward3.innerHTML = '&rarr;';\n\n//   back4.innerHTML = '&larr;';\n//   forward4.innerHTML = '&rarr;';\n\n//   back.onclick = function() {\n//     video.currentTime -= 0.0001;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   forward.onclick = function() {\n//     video.currentTime += 0.0001;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   back2.onclick = function() {\n//     video.currentTime -= 0.001;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   forward2.onclick = function() {\n//     video.currentTime += 0.001;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   back3.onclick = function() {\n//     video.currentTime -= 0.01;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   forward3.onclick = function() {\n//     video.currentTime += 0.01;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   back4.onclick = function() {\n//     video.currentTime -= 0.1;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   forward4.onclick = function() {\n//     video.currentTime += 0.1;\n//     console.log(video.currentTime);\n//     return false;\n//   };\n\n//   container.appendChild(back);\n//   container.appendChild(forward);\n//   container.appendChild(document.createElement('div'));\n\n//   container.appendChild(back2);\n//   container.appendChild(forward2);\n//   container.appendChild(document.createElement('div'));\n\n//   container.appendChild(back3);\n//   container.appendChild(forward3);\n//   container.appendChild(document.createElement('div'));\n\n//   container.appendChild(back4);\n//   container.appendChild(forward4);\n// }\n\n//# sourceURL=webpack:///./js/notations/tango/index.js?");

/***/ }),

/***/ "./js/utils/Notations.js":
/*!*******************************!*\
  !*** ./js/utils/Notations.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Notations = exports.Notations = function () {\n  function Notations(data) {\n    _classCallCheck(this, Notations);\n\n    var container = data.container || document.body;\n\n    if (data.hasOwnProperty('url')) {\n      DDD.json({\n        url: data.url,\n        container: container\n      }).then(data.cb).catch(function (err) {\n        console.error(err);\n      });\n    }\n\n    if (data.hasOwnProperty('img')) {\n      this.imgCallback = data.img.cb;\n      DDD.image({\n        url: data.img.src,\n        container: container,\n        loadingMsg: data.img.msg\n      }).then(this.prepareImageData.bind(this));\n\n      // Image Dimensions\n      this.imgW = data.img.width;\n      this.imgH = data.img.height;\n      this.fps = data.fps;\n\n      var areaWidth = this.imgW - data.img.offLeft - data.img.offRight;\n      var areaHeight = this.imgH - data.img.offTop - data.img.offBottom;\n\n      this.percent = {\n        h: DDD.getPercent(areaHeight, this.imgH),\n        w: DDD.getPercent(areaWidth, this.imgW),\n        top: DDD.getPercent(data.img.offTop, this.imgH),\n        bottom: DDD.getPercent(data.img.offBottom, this.imgH),\n        left: DDD.getPercent(data.img.offLeft, this.imgW),\n        right: DDD.getPercent(data.img.offRight, this.imgW)\n      };\n    }\n\n    this.stage = DDD.canvas(container, {\n      w: container.offsetWidth\n    });\n    this.canvas = this.stage.canvas;\n    this.ctx = this.stage.ctx;\n  }\n\n  _createClass(Notations, [{\n    key: 'prepareImageData',\n    value: function prepareImageData(res) {\n      this.img = new Image();\n      this.img.onload = this.imgCallback;\n      this.img.src = 'data:image/jpeg;base64,' + DDD.base64(res);\n    }\n  }]);\n\n  return Notations;\n}();\n\nvar notationsVideo = exports.notationsVideo = function notationsVideo(video, cb) {\n  // Happens once and triggers callback when video information (eg: duration) is accessible\n  video.onloadedmetadata = function () {\n    cb();\n    return false;\n  };\n\n  // TODO: implement some progress report or abort if taking too long\n  // var startLoading = Date.now();\n  // video.onprogress = function() {\n  //   var now = Date.now();\n  //   if (now - startLoading >= 10000 && video.readyState < 4) {\n  //     ...abort?\n  //   }\n  //   return false;\n  // };\n\n  video.onerror = function (event) {\n    var errMsg = document.createElement('div');\n    errMsg.innerHTML = video.innerHTML;\n    video.parentNode.replaceChild(errMsg, video);\n    console.log(err);\n    return false;\n  };\n\n  return video;\n};\n\n//# sourceURL=webpack:///./js/utils/Notations.js?");

/***/ })

/******/ });